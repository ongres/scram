<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" child.project.url.inherit.append.path="false" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.ongres.scram</groupId>
  <artifactId>scram-parent</artifactId>
  <version>3.1-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>SCRAM - Parent</name>
  <description>Java Implementation of the Salted Challenge Response Authentication Mechanism (SCRAM)</description>
  <url>https://github.com/ongres/scram</url>
  <inceptionYear>2017</inceptionYear>
  <organization>
    <name>OnGres, Inc</name>
    <url>https://www.ongres.com</url>
  </organization>
  <licenses>
    <license>
      <name>BSD 2-Clause "Simplified" License</name>
      <url>https://spdx.org/licenses/BSD-2-Clause</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <developers>
    <developer>
      <id>com.ongres.aht</id>
      <name>Álvaro Hernández Tortosa</name>
      <email>aht@ongres.com</email>
    </developer>
    <developer>
      <id>com.ongres.matteom</id>
      <name>Matteo Melli</name>
      <email>matteom@ongres.com</email>
    </developer>
    <developer>
      <id>com.ongres.jorsol</id>
      <name>Jorge Solórzano</name>
      <email>jorsol@ongres.com</email>
    </developer>
  </developers>

  <scm child.scm.connection.inherit.append.path="false" child.scm.developerConnection.inherit.append.path="false" child.scm.url.inherit.append.path="false">
    <connection>scm:git:https://github.com/ongres/scram.git</connection>
    <developerConnection>scm:git:git@github.com:ongres/scram.git</developerConnection>
    <url>https://github.com/ongres/scram</url>
  </scm>

  <issueManagement>
    <system>GitHub</system>
    <url>https://github.com/ongres/scram/issues</url>
  </issueManagement>

  <distributionManagement>
    <repository>
      <id>ossrh-release</id>
      <name>OSSRH Release repository</name>
      <url>https://oss.sonatype.org/service/local/staging/deploy/maven2</url>
    </repository>
    <snapshotRepository>
      <id>ossrh-snapshot</id>
      <name>OSSRH Snapshot repository</name>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>
  </distributionManagement>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <base.java.version>8</base.java.version>
    <maven.compiler.source>${base.java.version}</maven.compiler.source>
    <maven.compiler.target>${base.java.version}</maven.compiler.target>
    <project.build.outputTimestamp>2024-04-03T17:00:00Z</project.build.outputTimestamp>
    <!-- Dependency versions -->
    <jetbrains-annotations.version>24.1.0</jetbrains-annotations.version>
    <junit5.version>5.10.2</junit5.version>
    <saslprep.version>2.1</saslprep.version>
    <!-- Plugins versions -->
    <compiler-plugin.version>3.13.0</compiler-plugin.version>
    <jar-plugin.version>3.4.1</jar-plugin.version>
    <source-plugin.version>3.3.1</source-plugin.version>
    <javadoc-plugin.version>3.7.0</javadoc-plugin.version>
    <clean-plugin.version>3.3.2</clean-plugin.version>
    <resources-plugin.version>3.3.1</resources-plugin.version>
    <surefire-plugin.version>3.3.0</surefire-plugin.version>
    <failsafe-plugin.version>3.2.5</failsafe-plugin.version>
    <enforcer-plugin.version>3.5.0</enforcer-plugin.version>
    <install-plugin.version>3.1.2</install-plugin.version>
    <deploy-plugin.version>3.1.2</deploy-plugin.version>
    <invoker-plugin.version>3.7.0</invoker-plugin.version>
    <gpg-plugin.version>3.2.4</gpg-plugin.version>
    <jacoco-plugin.verson>0.8.12</jacoco-plugin.verson>
    <flatten-maven-plugin.version>1.6.0</flatten-maven-plugin.version>
    <jdeps-plugin.version>3.1.2</jdeps-plugin.version>
    <sortpom-plugin.version>4.0.0</sortpom-plugin.version>
    <cyclonedx-plugin.version>2.8.0</cyclonedx-plugin.version>
    <!-- Checkstyle, SpotBugs and PMD properties -->
    <checkstyle.version>10.17.0</checkstyle.version>
    <checkstyle-plugin.version>3.4.0</checkstyle-plugin.version>
    <errorprone.version>2.28.0</errorprone.version>
    <spotbugs.version>4.8.5</spotbugs.version>
    <spotbugs-plugin.version>4.8.5.0</spotbugs-plugin.version>
    <findsecbugs.version>1.13.0</findsecbugs.version>
    <pmd.version>7.2.0</pmd.version>
    <pmd-plugin.version>3.23.0</pmd-plugin.version>
    <forbiddenapis.version>3.7</forbiddenapis.version>
    <checks.location>${maven.multiModuleProjectDirectory}/checks</checks.location>
    <checkstyle.config.location>${checks.location}/checkstyle.xml</checkstyle.config.location>
    <checkstyle.suppressions.location>${checks.location}/checkstyle-suppressions.xml</checkstyle.suppressions.location>
    <checkstyle.header.file>${checks.location}/checkstyle-header.txt</checkstyle.header.file>
    <spotbugs.excludeFilterFile>${checks.location}/spotbugs-exclude.xml</spotbugs.excludeFilterFile>
    <pmd.ruleset>${checks.location}/pmd-ruleset.xml</pmd.ruleset>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.ongres.scram</groupId>
        <artifactId>scram-common</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.ongres.scram</groupId>
        <artifactId>scram-client</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.ongres.stringprep</groupId>
        <artifactId>saslprep</artifactId>
        <version>${saslprep.version}</version>
      </dependency>
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>${junit5.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jetbrains</groupId>
      <artifactId>annotations</artifactId>
      <version>${jetbrains-annotations.version}</version>
      <scope>provided</scope>
      <optional>true</optional>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${compiler-plugin.version}</version>
          <configuration>
            <showDeprecation>true</showDeprecation>
            <showWarnings>true</showWarnings>
            <parameters>true</parameters>
          </configuration>
          <executions>
            <execution>
              <id>java9-module</id>
              <goals>
                <goal>compile</goal>
              </goals>
              <!-- Activated with a profile -->
              <phase>none</phase>
              <configuration>
                <release>9</release>
                <compileSourceRoots>
                  <compileSourceRoot>${project.basedir}/src/main/java9</compileSourceRoot>
                </compileSourceRoots>
                <multiReleaseOutput>true</multiReleaseOutput>
              </configuration>
            </execution>
            <execution>
              <id>default-testCompile</id>
              <goals>
                <goal>testCompile</goal>
              </goals>
              <configuration>
                <release>11</release>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${jar-plugin.version}</version>
          <configuration>
            <skipIfEmpty>true</skipIfEmpty>
            <archive>
              <manifest>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              </manifest>
            </archive>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>${source-plugin.version}</version>
          <executions>
            <execution>
              <id>attach-sources</id>
              <goals>
                <goal>jar-no-fork</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>${javadoc-plugin.version}</version>
          <configuration>
            <locale>en_US</locale>
            <nohelp>true</nohelp>
            <quiet>false</quiet>
            <javadocDirectory>${maven.multiModuleProjectDirectory}/scram-parent/javadoc</javadocDirectory>
            <includeDependencySources>true</includeDependencySources>
            <dependencySourceIncludes>
              <dependencySourceInclude>${project.groupId}:*</dependencySourceInclude>
            </dependencySourceIncludes>
            <validateLinks>true</validateLinks>
            <detectOfflineLinks>false</detectOfflineLinks>
            <excludePackageNames>com.ongres.scram.common.util</excludePackageNames>
            <addStylesheets>
              <stylesheetfile>style.css</stylesheetfile>
            </addStylesheets>
            <tags>
              <tag>
                <name>apiNote</name>
                <placement>a</placement>
                <head>API Note:</head>
              </tag>
              <tag>
                <name>implSpec</name>
                <placement>a</placement>
                <head>Implementation Requirements:</head>
              </tag>
              <tag>
                <name>implNote</name>
                <placement>a</placement>
                <head>Implementation Note:</head>
              </tag>
            </tags>
          </configuration>
          <executions>
            <execution>
              <id>attach-javadocs</id>
              <goals>
                <goal>jar</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${resources-plugin.version}</version>
          <executions>
            <execution>
              <id>add-license</id>
              <goals>
                <goal>copy-resources</goal>
              </goals>
              <phase>generate-resources</phase>
              <configuration>
                <outputDirectory>${project.build.outputDirectory}/META-INF</outputDirectory>
                <resources>
                  <resource>
                    <directory>${maven.multiModuleProjectDirectory}</directory>
                    <includes>
                      <include>LICENSE</include>
                    </includes>
                    <filtering>false</filtering>
                  </resource>
                </resources>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-invoker-plugin</artifactId>
          <version>${invoker-plugin.version}</version>
          <configuration>
            <debug>false</debug>
            <cloneProjectsTo>${project.build.directory}/it</cloneProjectsTo>
            <pomIncludes>
              <pomInclude>*/pom.xml</pomInclude>
            </pomIncludes>
            <!-- <postBuildHookScript>verify</postBuildHookScript> -->
            <localRepositoryPath>${project.build.directory}/local-repo</localRepositoryPath>
            <settingsFile>src/it/settings.xml</settingsFile>
          </configuration>
          <executions>
            <execution>
              <id>integration-test</id>
              <goals>
                <goal>install</goal>
                <goal>integration-test</goal>
                <goal>verify</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${surefire-plugin.version}</version>
        </plugin>
        <!-- Rerun unittests with the multirelease jar, cannot be done with
        exploded directory of classes  -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>${failsafe-plugin.version}</version>
          <configuration>
            <includes>
              <include>**/*Test.java</include>
              <include>**/*IT.java</include>
            </includes>
            <systemPropertyVariables>
              <buildJar>${project.build.directory}/${project.build.finalName}.jar</buildJar>
            </systemPropertyVariables>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>integration-test</goal>
                <goal>verify</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>${install-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>${deploy-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>${clean-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>${enforcer-plugin.version}</version>
          <executions>
            <execution>
              <id>enforce-versions</id>
              <goals>
                <goal>enforce</goal>
              </goals>
              <configuration>
                <rules>
                  <requireMavenVersion>
                    <version>[3.9.7,)</version>
                  </requireMavenVersion>
                  <requireJavaVersion>
                    <version>[21,)</version>
                  </requireJavaVersion>
                </rules>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${jacoco-plugin.verson}</version>
          <executions>
            <!-- prepare the agent -->
            <execution>
              <id>prepare-agent</id>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
              <phase>process-test-classes</phase>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>flatten-maven-plugin</artifactId>
          <version>${flatten-maven-plugin.version}</version>
          <configuration>
            <flattenMode>ossrh</flattenMode>
            <flattenDependencyMode>all</flattenDependencyMode>
          </configuration>
          <executions>
            <!-- enable flattening -->
            <execution>
              <id>flatten</id>
              <goals>
                <goal>flatten</goal>
              </goals>
              <phase>process-resources</phase>
            </execution>
            <!-- ensure proper cleanup -->
            <execution>
              <id>flatten-clean</id>
              <goals>
                <goal>clean</goal>
              </goals>
              <phase>clean</phase>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-gpg-plugin</artifactId>
          <version>${gpg-plugin.version}</version>
          <executions>
            <execution>
              <id>sign-artifacts</id>
              <goals>
                <goal>sign</goal>
              </goals>
              <phase>verify</phase>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.cyclonedx</groupId>
          <artifactId>cyclonedx-maven-plugin</artifactId>
          <version>${cyclonedx-plugin.version}</version>
          <configuration>
            <includeCompileScope>true</includeCompileScope>
            <includeProvidedScope>false</includeProvidedScope>
            <includeRuntimeScope>false</includeRuntimeScope>
            <includeSystemScope>false</includeSystemScope>
            <includeTestScope>false</includeTestScope>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>makeAggregateBom</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <!-- Slower but safer profile used to look for errors before pushing to
      SCM -->
      <id>checks</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>${compiler-plugin.version}</version>
            <configuration>
              <fork>true</fork>
              <showWarnings>true</showWarnings>
              <compilerArgs>
                <arg>-Xlint:all</arg>
                <arg>-XDcompilePolicy=simple</arg>
                <arg>-Xplugin:ErrorProne \
                  -XepAllErrorsAsWarnings \
                  -XepDisableWarningsInGeneratedCode</arg>
                <!-- Required on JDK 16+ due to JEP 396 -->
                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED</arg>
                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED</arg>
                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED</arg>
                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.model=ALL-UNNAMED</arg>
                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED</arg>
                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED</arg>
                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED</arg>
                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED</arg>
                <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED</arg>
                <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED</arg>
              </compilerArgs>
              <annotationProcessorPaths>
                <path>
                  <groupId>com.google.errorprone</groupId>
                  <artifactId>error_prone_core</artifactId>
                  <version>${errorprone.version}</version>
                </path>
              </annotationProcessorPaths>
            </configuration>
          </plugin>
          <plugin>
            <groupId>de.thetaphi</groupId>
            <artifactId>forbiddenapis</artifactId>
            <version>${forbiddenapis.version}</version>
            <configuration>
              <bundledSignatures>
                <!--
                  This will automatically choose the right
                  signatures based on 'maven.compiler.target':
                -->
                <bundledSignature>jdk-unsafe</bundledSignature>
                <bundledSignature>jdk-deprecated</bundledSignature>
                <bundledSignature>jdk-internal</bundledSignature>
                <!-- disallow undocumented classes like sun.misc.Unsafe: -->
                <bundledSignature>jdk-non-portable</bundledSignature>
                <!-- don't allow unsafe reflective access: -->
                <bundledSignature>jdk-reflection</bundledSignature>
                <!-- don't allow System.out or System.err: -->
                <bundledSignature>jdk-system-out</bundledSignature>
              </bundledSignatures>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>check</goal>
                  <goal>testCheck</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jdeps-plugin</artifactId>
            <version>${jdeps-plugin.version}</version>
            <configuration>
              <multiRelease>9</multiRelease>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>jdkinternals</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-checkstyle-plugin</artifactId>
            <version>${checkstyle-plugin.version}</version>
            <dependencies>
              <dependency>
                <groupId>com.puppycrawl.tools</groupId>
                <artifactId>checkstyle</artifactId>
                <version>${checkstyle.version}</version>
              </dependency>
            </dependencies>
            <executions>
              <execution>
                <id>style</id>
                <goals>
                  <goal>check</goal>
                </goals>
                <phase>verify</phase>
                <configuration>
                  <violationSeverity>error</violationSeverity>
                  <failOnViolation>true</failOnViolation>
                  <failsOnError>true</failsOnError>
                  <consoleOutput>true</consoleOutput>
                  <includeResources>false</includeResources>
                  <includeTestSourceDirectory>true</includeTestSourceDirectory>
                  <includeTestResources>false</includeTestResources>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>com.github.spotbugs</groupId>
            <artifactId>spotbugs-maven-plugin</artifactId>
            <version>${spotbugs-plugin.version}</version>
            <configuration>
              <effort>Max</effort>
              <threshold>Low</threshold>
              <xmlOutput>true</xmlOutput>
              <failOnError>true</failOnError>
              <addSourceDirs>true</addSourceDirs>
              <plugins>
                <plugin>
                  <groupId>com.h3xstream.findsecbugs</groupId>
                  <artifactId>findsecbugs-plugin</artifactId>
                  <version>${findsecbugs.version}</version>
                </plugin>
              </plugins>
            </configuration>
            <dependencies>
              <dependency>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs</artifactId>
                <version>${spotbugs.version}</version>
              </dependency>
            </dependencies>
            <executions>
              <execution>
                <id>scan</id>
                <goals>
                  <goal>check</goal>
                </goals>
                <phase>verify</phase>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-pmd-plugin</artifactId>
            <version>${pmd-plugin.version}</version>
            <configuration>
              <failurePriority>5</failurePriority>
              <failOnViolation>true</failOnViolation>
              <printFailingErrors>true</printFailingErrors>
              <linkXRef>false</linkXRef>
              <rulesets>
                <ruleset>${pmd.ruleset}</ruleset>
              </rulesets>
            </configuration>
            <dependencies>
              <dependency>
                <groupId>net.sourceforge.pmd</groupId>
                <artifactId>pmd-core</artifactId>
                <version>${pmd.version}</version>
              </dependency>
              <dependency>
                <groupId>net.sourceforge.pmd</groupId>
                <artifactId>pmd-java</artifactId>
                <version>${pmd.version}</version>
              </dependency>
            </dependencies>
            <executions>
              <execution>
                <id>pmd-scan</id>
                <goals>
                  <goal>check</goal>
                </goals>
                <phase>verify</phase>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>com.github.ekryd.sortpom</groupId>
            <artifactId>sortpom-maven-plugin</artifactId>
            <version>${sortpom-plugin.version}</version>
            <executions>
              <execution>
                <goals>
                  <goal>sort</goal>
                </goals>
                <phase>verify</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>release</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>flatten-maven-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>org.cyclonedx</groupId>
            <artifactId>cyclonedx-maven-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>compile-java9</id>
      <activation>
        <jdk>[9,)</jdk>
      </activation>
      <properties>
        <maven.compiler.release>${base.java.version}</maven.compiler.release>
      </properties>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-compiler-plugin</artifactId>
              <executions>
                <execution>
                  <id>java9-module</id>
                  <phase>compile</phase>
                </execution>
              </executions>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
  </profiles>

</project>
